{"version":3,"sources":["components/WelcomePage.js","api/index.js","data/APIPlaceHolder.js","components/GenUse.js","tabler-icons/icons.js","components/AbilityScores.js","components/DynamicSheet.js","components/FinalSheet.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["WelcomePage","props","useState","player_name","playerName","setPlayerName","history","useHistory","submitForm","e","preventDefault","addNewPlayerName","push","className","href","target","onSubmit","htmlFor","type","name","id","value","placeholder","onChange","onClick","dndAPIUrl","nameAPIUrl","process","fetchClassData","a","axios","get","res","data","results","console","log","fetchRaceData","fetchNameList","names","charaAlign","abilityScoreHolder","GenUse","character_name","dnd_class","dnd_alignment","sex","dnd_race","chara_level","str","dex","con","int","cha","wis","fullForm","dndClassData","setDndClassData","dndRaceData","setDndRaceData","randomNameData","setRandomNameData","useEffect","fetchVarious","length","randomizingFunction","array","objKey","min","max","arrIndex","Math","floor","random","ASH","map","score","index","randomSex","addNewChara","addNewDndStats","upArrow","xmlns","class","width","height","viewBox","stroke-width","stroke","fill","stroke-linecap","stroke-linejoin","d","downArrow","transform","AbilityScore","inputNumbers","setInputNumbers","increaseScore","alert","decreaseScore","onReset","ability","alt","DynamicSheet","formInputs","setFormInputs","handleChanges","randomIndex","key","dndClass","i","dndRace","align","FinalSheet","savedPlayerName","finalInput","dndStats","Routes","setSavedPlayerName","setFinalInput","char","newChara","Date","now","player_level","level","setDndStats","attr","newDndStats","exact","path","play","newPlayerName","AbilityScores","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ca7e1f06.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport \"../styles/welcomePage.css\";\r\n\r\n//url is base /\r\n\r\nconst WelcomePage = (props) =>{\r\n  const [playerName, setPlayerName] = useState({\r\n    player_name: \"\"\r\n  })\r\n\r\n  const history = useHistory();\r\n\r\n  const toUse = () =>{\r\n    history.push('/use');\r\n  }\r\n\r\n  const handleChanges = e =>{\r\n    setPlayerName({...playerName, [e.target.name]: [e.target.value]});\r\n  }\r\n\r\n  const submitForm = e =>{\r\n    e.preventDefault();\r\n    props.addNewPlayerName(playerName);\r\n    setPlayerName({\r\n      player_name: \"\"\r\n    })\r\n    toUse();\r\n  }\r\n\r\n  return(\r\n    <div className=\"landing-page\">\r\n        <header>\r\n        <h1>Welcome to an Interactive Character Generator</h1>\r\n        </header>\r\n        <section>\r\n        <p>This character generator is build with Dungeons and Dragons 5th Edition in mind. It can also be used for making random characters as well if you desire. I can't stop you from doing what you want. If you want to the Github repository for this web application, {<a href=\"https://github.com/erin-davis/chara-generator\" target=\"_blank\">click here</a>}!</p>\r\n        </section>\r\n        <section>\r\n        <h2>Ready to go?</h2>\r\n        <form onSubmit={submitForm}>\r\n          <label htmlFor=\"player_name\">Your Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"player_name\"\r\n            id=\"player_name\"\r\n            value={playerName.player_name}\r\n            placeholder=\"Player Name\"\r\n            onChange={handleChanges}\r\n          />\r\n        </form>\r\n        <button type='submit' onClick={submitForm}>Start</button>\r\n      </section>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default WelcomePage;","import axios from \"axios\";\r\n\r\nconst dndAPIUrl = \"https://www.dnd5eapi.co\";\r\n\r\nconst nameAPIKey = process.env.REACT_APP_NAME_API_KEY;\r\nconst nameAPIUrl = `https://www.behindthename.com/api/random.json?key=${nameAPIKey}`;\r\n\r\nexport const fetchClassData = async () =>{\r\n  try {\r\n    const res = await axios.get(`${dndAPIUrl}/api/classes`);\r\n    return res.data.results;\r\n  } catch (err) {\r\n    console.log('there is an error: ', err);\r\n  }\r\n}\r\n//these work, i just want to limit the amount of api calls im making\r\n// export const fetchLanguageData = async () =>{\r\n//   try {\r\n//     const res = await axios.get(`${dndAPIUrl}/api/languages`);\r\n//     return res.data.results;\r\n//   } catch (err) {\r\n//     console.log('there is an error: ', err);\r\n//   }\r\n// }\r\n\r\nexport const fetchRaceData = async () =>{\r\n  try {\r\n    const res = await axios.get(`${dndAPIUrl}/api/races`);\r\n    return res.data.results;\r\n  } catch (err) {\r\n    console.log('there is an error: ', err);\r\n  }\r\n}\r\n\r\nexport const fetchAbilityScoreData = async () =>{\r\n  try {\r\n    const res = await axios.get(`${dndAPIUrl}/api/ability-scores`);\r\n    return res.data.results;\r\n  } catch (err) {\r\n    console.log('there is an error: ', err);\r\n  }\r\n}\r\n\r\nexport const fetchNameList = async () =>{\r\n  try {\r\n    const res = await axios.get(`${nameAPIUrl}&number=6`);\r\n    return res.data.names;\r\n  } catch (err) {\r\n    console.log('there is an error in the name api', err);\r\n  }\r\n}","  export const charaAlign = [\r\n    {\r\n      \"index\": 1,\r\n      \"id\": \"lawful_good\",\r\n      \"name\": \"Lawful Good\",\r\n      \"summary\": `A lawful good character typically acts with compassion and always with honor and a sense of duty. However, lawful good characters will often regret taking any action they fear would violate their code, even if they recognize such action as being good. Such characters include gold dragons, righteous knights, paladins, and most dwarves.`\r\n    },\r\n    {\r\n      \"index\": 2,\r\n      \"id\": \"neutral_good\",\r\n      \"name\": \"Neutral Good\",\r\n      \"summary\": `A neutral good character typically acts altruistically, without regard for or against lawful precepts such as rules or tradition. A neutral good character has no problems with cooperating with lawful officials, but does not feel beholden to them. In the event that doing the right thing requires the bending or breaking of rules, they do not suffer the same inner conflict that a lawful good character would. Examples of this alignment include many celestials, some cloud giants, and most gnomes.`\r\n    },\r\n    {\r\n      \"index\": 3,\r\n      \"id\": \"chaotic_good\",\r\n      \"name\": \"Chaotic Good\",\r\n      \"summary\": `A chaotic good character does what is necessary to bring about change for the better, disdains bureaucratic organizations that get in the way of social improvement, and places a high value on personal freedom, not only for oneself, but for others as well. Chaotic good characters usually intend to do the right thing, but their methods are generally disorganized and often out of sync with the rest of society. Examples of this alignment include copper dragons, many elves, and unicorns.`\r\n    },\r\n    {\r\n      \"index\": 4,\r\n      \"id\": \"lawful_neutral\",\r\n      \"name\": \"Lawful Neutral\",\r\n      \"summary\": `A lawful neutral character typically believes strongly in lawful concepts such as honor, order, rules, and tradition, but often follows a personal code in addition to, or even in preference to, one set down by a benevolent authority. Examples of this alignment include a soldier who always follows orders, a judge or enforcer who adheres mercilessly to the letter of the law, a disciplined monk, and some wizards.`\r\n    },\r\n    {\r\n      \"index\": 5,\r\n      \"id\": \"true_neutral\",\r\n      \"name\": \"True Neutral\",\r\n      \"summary\": `A neutral character (also called \"true neutral\") is neutral on both axes and tends not to feel strongly towards any alignment, or actively seeks their balance. Druids frequently follow this dedication to balance and, under Advanced Dungeons & Dragons rules, were required to be this alignment. In an example given in the 2nd Edition Player's Handbook, a typical druid might fight against a band of marauding gnolls, only to switch sides to save the gnolls' clan from being totally exterminated. Examples of this alignment include lizardfolk, most druids, and many humans.`\r\n    },\r\n    {\r\n      \"index\": 6,\r\n      \"id\": \"chaotic_neutral\",\r\n      \"name\": \"Chaotic Neutral\",\r\n      \"summary\": `A chaotic neutral character is an individualist who follows their own heart and generally shirks rules and traditions. Although chaotic neutral characters promote the ideals of freedom, it is their own freedom that comes first; good and evil come second to their need to be free. Examples of this alignment include many barbarians and rogues, and some bards.`\r\n    },\r\n    {\r\n      \"index\": 7,\r\n      \"id\": \"lawful_evil\",\r\n      \"name\": \"Lawful Evil\",\r\n      \"summary\": `A lawful evil character sees a well-ordered system as being easier to exploit than to necessarily follow. Examples of this alignment include tyrants, devils, corrupt officials, undiscriminating mercenary types who have a strict code of conduct, blue dragons, and hobgoblins.`\r\n    },\r\n    {\r\n      \"index\": 8,\r\n      \"id\": \"neutral_evil\",\r\n      \"name\": \"Neutral Evil\",\r\n      \"summary\": `A neutral evil character is typically selfish and has no qualms about turning on allies-of-the-moment, and usually makes allies primarily to further their own goals. A neutral evil character has no compunctions about harming others to get what they want, but neither will they go out of their way to cause carnage or mayhem when they see no direct benefit for themselves. Another valid interpretation of neutral evil holds up evil as an ideal, doing evil for evil's sake and trying to spread its influence. Examples of the first type are an assassin who has little regard for formal laws but does not needlessly kill, a henchman who plots behind their superior's back, or a mercenary who readily switches sides if made a better offer. An example of the second type would be a masked killer who strikes only for the sake of causing fear and distrust in the community. Examples of this alignment include many drow, some cloud giants, and yugoloths.`\r\n    },\r\n    {\r\n      \"index\": 9,\r\n      \"id\": \"chaotic_evil\",\r\n      \"name\": \"Chaotic Evil\",\r\n      \"summary\": `A chaotic evil character tends to have no respect for rules, other people's lives, or anything but their own desires, which are typically selfish and cruel. They set a high value on personal freedom, but do not have much regard for the lives or freedom of other people. Chaotic evil characters do not work well in groups because they resent being given orders and usually do not behave themselves unless there is no alternative. Examples of this alignment include higher forms of undead (such as liches), violent killers who strike for pleasure rather than profit, demons, red dragons, and orcs.`\r\n    },\r\n    {\r\n      \"index\": 10,\r\n      \"id\": \"unaligned\",\r\n      \"name\": \"Unaligned\",\r\n      \"summary\": `Creatures not sapient enough to make decisions based on moral choices, but operating purely on instinct, are described as \"unaligned\".[16] Sharks are savage predators, for example, but they are not evil: they have no alignment.[16] The use of \"unaligned\" for creatures was introduced in the 4th edition, and retained in 5th edition.`\r\n    }\r\n  ]\r\n\r\n  export const abilityScoreHolder =[\r\n    {\r\n      \"index\": \"cha\",\r\n      \"name\": \"CHA\",\r\n      \"url\": \"/api/ability-scores/cha\"\r\n    },\r\n    {\r\n      \"index\": \"con\",\r\n      \"name\": \"CON\",\r\n      \"url\": \"/api/ability-scores/con\"\r\n    },\r\n    {\r\n      \"index\": \"dex\",\r\n      \"name\": \"DEX\",\r\n      \"url\": \"/api/ability-scores/dex\"\r\n    },\r\n    {\r\n      \"index\": \"int\",\r\n      \"name\": \"INT\",\r\n      \"url\": \"/api/ability-scores/int\"\r\n    },\r\n    {\r\n      \"index\": \"str\",\r\n      \"name\": \"STR\",\r\n      \"url\": \"/api/ability-scores/str\"\r\n    },\r\n    {\r\n      \"index\": \"wis\",\r\n      \"name\": \"WIS\",\r\n      \"url\": \"/api/ability-scores/wis\"\r\n    }\r\n  ]","import React, {useState, useEffect} from \"react\";\r\nimport {BrowserRouter as Router, Link, Switch, useHistory} from \"react-router-dom\";\r\nimport {fetchClassData, fetchRaceData, fetchNameList} from \"../api\";\r\nimport {charaAlign, abilityScoreHolder as ASH} from \"../data/APIPlaceHolder\";\r\nimport \"../styles/genUse.css\"\r\n//url is /use\r\n\r\nconst GenUse = (props) =>{\r\n  const history = useHistory();\r\n  const toFinal = () =>{\r\n    history.push('/final');\r\n  }\r\n  const toSelect = () =>{\r\n    history.push('/selection');\r\n  }\r\n\r\n  const [fullForm, setFullForm] = useState({\r\n    character_name: \"\",\r\n    dnd_class: \"\",\r\n    dnd_alignment: \"\",\r\n    sex: \"\",\r\n    dnd_race: \"\",\r\n    chara_level: \"\",\r\n    str: 10,\r\n    dex: 10,\r\n    con: 10,\r\n    int: 10,\r\n    cha: 10,\r\n    wis: 10\r\n  });\r\n\r\n  const [dndClassData, setDndClassData] = useState([]);\r\n  const [dndRaceData, setDndRaceData] = useState([]);\r\n  const [randomNameData, setRandomNameData] = useState({});\r\n\r\n  useEffect(()=>{\r\n    const fetchVarious = async () =>{\r\n      setDndClassData(await fetchClassData());\r\n      setDndRaceData(await fetchRaceData());\r\n      setRandomNameData(await fetchNameList());\r\n    }\r\n    fetchVarious();\r\n  }, []);\r\n\r\n  //I will admit, this is about the be the ugliest code ever but it works so I can refine it once I finish my portfolio site\r\n  const randomizeForm = () =>{\r\n    const randomizingFunction = (array, objKey, min) =>{\r\n      let max = array.length;\r\n      let arrIndex = Math.floor(Math.random() * (max-min) + min);\r\n      array[arrIndex].name ? fullForm[objKey] = array[arrIndex].name : fullForm[objKey] = array[arrIndex];\r\n    }\r\n\r\n    fullForm.chara_level = 1;\r\n    const randomSex = () =>{\r\n      let sexArray = [\"Male\", \"Female\", \"Other\"];\r\n      let arrIndex = Math.floor(Math.random() * 3);\r\n      fullForm.sex = sexArray[arrIndex];\r\n    }\r\n\r\n    //for the ability scores!\r\n      ASH.map((score) =>{\r\n        fullForm[score.index] = Math.floor(Math.random() * (20 - 4) + 5);\r\n      })\r\n\r\n    randomizingFunction(dndRaceData, \"dnd_race\", 1);\r\n    randomizingFunction(dndClassData, \"dnd_class\", 1);\r\n    randomizingFunction(randomNameData, \"character_name\", 0);\r\n    randomizingFunction(charaAlign, \"dnd_alignment\", 1);\r\n    randomSex();\r\n    props.addNewChara(fullForm);\r\n    props.addNewDndStats(fullForm);\r\n    toFinal();\r\n  }\r\n\r\n  return(\r\n    <div className=\"gen-use\">\r\n      <header>\r\n        <h1>What do you want to create?</h1>\r\n      </header>\r\n      <div className=\"creation-use\">\r\n        <section className=\"NPC\" onClick={randomNameData.length > 0 ? randomizeForm : <p>Try again!</p>}>\r\n          <h2>Non-Player Character</h2>\r\n          <p className=\"NPC-gen-desc\">This will bring you to a fully randomly generated character! Use this one if you just want to make characters quickly!</p>\r\n          <p className=\"NPC-gen-desc\">(At present, this only works with level one characters)</p>\r\n        </section>\r\n        <section className=\"PC\" onClick={toSelect}>\r\n          <h2>Player Character</h2>\r\n          <p className=\"PC-gen-desc\">This will allow you to have a more indepth character creation experience! You can pick and choose information and stats you want your character to have.</p>\r\n        </section>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenUse;","import React from \"react\"\r\n\r\nexport const refreshIcon =(\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-refresh\" width=\"44\" height=\"44\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#2c3e50\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\r\n  <path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -5v5h5\" />\r\n  <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 5v-5h-5\" />\r\n</svg>\r\n)\r\n\r\n//for use with AbilityScores.js\r\n\r\nexport const upArrow =(\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-caret-up\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\" #F71735\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\r\n  <path d=\"M18 15l-6-6l-6 6h12\" />\r\n</svg>)\r\n\r\n\r\nexport const downArrow = (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-caret-down\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\" #F71735\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\"/>\r\n  <path d=\"M18 15l-6-6l-6 6h12\" transform=\"rotate(180 12 12)\" />\r\n</svg>\r\n)","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {abilityScoreHolder as ASH} from \"../data/APIPlaceHolder\";\r\nimport {upArrow, downArrow} from \"../tabler-icons/icons.js\"\r\nimport \"../styles/abilityScores.css\"\r\n\r\nconst AbilityScore = props =>{\r\n  const history = useHistory();\r\n  const toFinal = () =>{\r\n    history.push('/final');\r\n  }\r\n\r\n  const [inputNumbers, setInputNumbers] = useState({\r\n    str: 10,\r\n    dex: 10,\r\n    con: 10,\r\n    int: 10,\r\n    cha: 10,\r\n    wis: 10\r\n  });\r\n\r\n  const increaseScore = e =>{\r\n    e.preventDefault();\r\n    setInputNumbers({\r\n      ...inputNumbers,\r\n      [e.target.name]: inputNumbers[e.target.name] + 1\r\n    });\r\n    if(inputNumbers[e.target.name] > 19){\r\n      alert(\"Sorry, this is the highest you can go!\");\r\n      setInputNumbers({\r\n        ...inputNumbers, [e.target.name]: 20\r\n      });\r\n    }\r\n  };\r\n\r\n  const decreaseScore = e =>{\r\n    e.preventDefault();\r\n    setInputNumbers({\r\n      ...inputNumbers,\r\n      [e.target.name]: inputNumbers[e.target.name] - 1\r\n    });\r\n    if(inputNumbers[e.target.name] < 6){\r\n      alert(\"Sorry, you can't go any lower than this!\");\r\n      setInputNumbers({\r\n        ...inputNumbers, [e.target.name]: 5\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  const submitForm = e =>{\r\n    e.preventDefault();\r\n    props.addNewDndStats(inputNumbers);\r\n    setInputNumbers({\r\n      str: 10,\r\n      dex: 10,\r\n      con: 10,\r\n      int: 10,\r\n      cha: 10,\r\n      wis: 10\r\n    });\r\n    toFinal();\r\n  }\r\n\r\n  const resetForm = e =>{\r\n    alert('The numbers will be reset now.');\r\n    setInputNumbers({\r\n      str: 10,\r\n      dex: 10,\r\n      con: 10,\r\n      int: 10,\r\n      cha: 10,\r\n      wis: 10\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"ability-score-container\">\r\n      <form onSubmit={submitForm} onReset={resetForm}>\r\n      <h2>Input the ability scores you're looking for!</h2>\r\n        {ASH.map((ability)=>{\r\n          return(\r\n            <div className=\"ability-scores\">\r\n              <h2>{ability.name}</h2>\r\n              <div className=\"scores\" max='20'><h3>{inputNumbers[ability.index] }\r\n              ({Math.floor((inputNumbers[ability.index] - 10) / 2)})\r\n              </h3>\r\n              </div>\r\n              <span className=\"arrow-container\" >\r\n              <button\r\n              className=\"bttn\"\r\n              name={ability.index}\r\n              onClick={increaseScore}\r\n              >\r\n                <i className=\"up-arrow\" alt={`Up Arrow to Increase ${ability.name}`}>{upArrow}</i>\r\n            </button>\r\n            </span>\r\n            <span className=\"arrow-container\">\r\n              <button\r\n              className=\"bttn\"\r\n              name={ability.index}\r\n              onClick={decreaseScore}\r\n              >\r\n                <i className=\"down-arrow\" alt={`Down Arrow to decrease ${ability.name}`}>{downArrow}</i>\r\n              </button>\r\n              </span>\r\n            </div>\r\n          )\r\n        })}\r\n      <div className='buttons-container'>\r\n        <button type=\"reset\">Reset</button>\r\n        <button type=\"submit\">Submit</button>\r\n      </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default AbilityScore;","import React, { useState, useEffect } from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {fetchClassData, fetchRaceData, fetchNameList} from \"../api\";\r\nimport {charaAlign} from \"../data/APIPlaceHolder\";\r\nimport \"../styles/dynamicSheet.css\"\r\n\r\nconst DynamicSheet = props =>{\r\n  const history = useHistory();\r\n\r\n  const toScore = () =>{\r\n    history.push('/ability-scores');\r\n  }\r\n\r\n  const [formInputs, setFormInputs] = useState({\r\n    player_name: \"\",\r\n    character_name: \"\",\r\n    dnd_class: \"\",\r\n    dnd_alignment: \"\",\r\n    sex: \"\",\r\n    dnd_race: \"\",\r\n    chara_level: \"\"\r\n  });\r\n\r\n  const [dndClassData, setDndClassData] = useState([]);\r\n  const [dndRaceData, setDndRaceData] = useState([]);\r\n  const [randomNameData, setRandomNameData] = useState({});\r\n\r\n  useEffect(()=>{\r\n    const fetchVarious = async () =>{\r\n      setDndClassData(await fetchClassData());\r\n      setDndRaceData(await fetchRaceData());\r\n      setRandomNameData(await fetchNameList());\r\n    }\r\n    fetchVarious();\r\n  }, []);\r\n\r\n  const handleChanges = e =>{\r\n    setFormInputs({...formInputs, [e.target.name]: [e.target.value]});\r\n  }\r\n\r\n\r\n  //this is to randomize for a few of the inputs. It's not super DRY but it works for its purpose\r\n  if(formInputs.dnd_class == \"random\" || formInputs.dnd_alignment == \"random\" || formInputs.dnd_race == \"random\"){\r\n    if(formInputs.dnd_class == 'random'){\r\n      let max = dndClassData.length;\r\n      let randomIndex = Math.floor(Math.random() * (max-1) + 1)\r\n      formInputs.dnd_class = dndClassData[randomIndex].name\r\n    }\r\n    if(formInputs.dnd_race == 'random'){\r\n      let max = dndRaceData.length;\r\n      let randomIndex = Math.floor(Math.random() * (max-1) + 1)\r\n      formInputs.dnd_race = dndRaceData[randomIndex].name\r\n    }\r\n    if(formInputs.dnd_alignment == 'random'){\r\n      let max = charaAlign.length;\r\n      let randomIndex = Math.floor(Math.random() * (max-1) + 1)\r\n      formInputs.dnd_alignment = charaAlign[randomIndex].name\r\n    }\r\n  }\r\n\r\n  const submitForm = e =>{\r\n    e.preventDefault();\r\n    props.addNewChara(formInputs);\r\n    setFormInputs({\r\n      player_name: \"\",\r\n      character_name: \"\",\r\n      dnd_class: \"\",\r\n      dnd_alignment: \"\",\r\n      sex: \"\",\r\n      dnd_race: \"\",\r\n      chara_level: \"\"\r\n    })\r\n    toScore();\r\n  };\r\n\r\n  const resetForm = e =>{\r\n    setFormInputs({\r\n      player_name: \"\",\r\n      character_name: \"\",\r\n      dnd_class: \"\",\r\n      dnd_alignment: \"\",\r\n      sex: \"\",\r\n      dnd_race: \"\",\r\n      chara_level: \"\"\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div className=\"dynamic-sheet\">\r\n      <form onSubmit={submitForm}  onReset={resetForm}>\r\n      <h2>Start your character creation here!</h2>\r\n        <section className=\"name-choice-container\">\r\n          <label>Character Name</label>\r\n          <select name=\"character_name\" id=\"character_name\" onChange={handleChanges}>\r\n            <option value=\"\">Pick a Name!</option>\r\n            {randomNameData.length > 0 ? randomNameData.map((name, index) =>{\r\n              return(\r\n              <option value={name} key={index}>{name}</option>\r\n              )\r\n            }) : null}\r\n          </select>\r\n        </section>\r\n        <section className=\"form-sex\">\r\n          <label>Sex?</label>\r\n          <article>\r\n            <input type=\"radio\" name=\"sex\" id=\"female\" value=\"Female\" onChange={handleChanges}/>\r\n            <label htmlFor=\"female\">Female</label>\r\n            <input type=\"radio\" name=\"sex\" id=\"male\" value=\"Male\" onChange={handleChanges}/>\r\n            <label htmlFor=\"male\">Male</label>\r\n            <input type=\"radio\" name=\"sex\" id=\"other\" value=\"Other\" onChange={handleChanges}/>  \r\n            <label htmlFor=\"other\">Other</label>\r\n          </article>\r\n        </section>\r\n        <section className=\"chara-level\">\r\n          <label htmlFor=\"chara_level\">Level</label>\r\n            <input\r\n            className=\"chara-level\"\r\n            type=\"number\"\r\n            id=\"chara_level\"\r\n            name=\"chara_level\"\r\n            min=\"1\"\r\n            max=\"20\"\r\n            onChange={handleChanges}\r\n            />\r\n          </section>\r\n        <section className=\"dnd-class\">\r\n        <label htmlFor=\"dnd_class\">Class</label>\r\n          <select name=\"dnd_class\" id=\"dnd_class\" onChange={handleChanges}>\r\n            <option value=\"\">Select a Class!</option>\r\n            {\r\n            (dndClassData.map((dndClass, i) =>{\r\n              return (\r\n              <option value={dndClass.name} key={i}>{dndClass.name}</option>\r\n              )\r\n            }))}\r\n            <option value=\"random\">Surprise Me!</option>\r\n          </select>\r\n        </section>\r\n        <section className=\"dnd-race\">\r\n          <label htmlFor=\"dnd_race\">Race</label>\r\n          <select name=\"dnd_race\" id=\"dnd_race\" onChange={handleChanges}>\r\n            <option value=\"\">Select a Race!</option>\r\n            {dndRaceData.map((dndRace, i) =>{\r\n              return(\r\n              <option value={dndRace.name} key={i}>{dndRace.name}</option>\r\n              )\r\n            })}\r\n            <option value=\"random\">Surprise Me!</option>\r\n          </select>\r\n        </section>\r\n          <section className=\"dnd-align\">\r\n            <label>Alignment</label>\r\n            {<select name=\"dnd_alignment\" id=\"dnd_alignment\" onChange={handleChanges}>\r\n              <option value=\"\">Choose Your Alignment!</option>\r\n              {charaAlign.map((align) =>{\r\n                return(\r\n                <option value={align.name} id={align.id}>{align.name}</option>\r\n                )\r\n              })}\r\n              <option value=\"TBA\">Decide Later</option>\r\n              <option value=\"random\">Surprise Me!</option>\r\n            </select>}\r\n          </section>\r\n          <section className=\"buttons\">\r\n            <button type=\"reset\">Reset</button>\r\n            <button type=\"submit\">Next</button>\r\n          </section>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default DynamicSheet;","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"../styles/finalSheet.css\"\r\n\r\nconst FinalSheet = props =>{\r\n  const history = useHistory();\r\n  const toStart = () =>{\r\n    history.push('/');\r\n  }\r\n  return(\r\n    <div className=\"final-chara-sheet\">\r\n      <div className=\"character-sheet\">\r\n        <h1>Here is your final character sheet! Be kind to your new character. Or don't! I'm not a cop.</h1>\r\n        <div className=\"character-details\">\r\n          <h3>Player Name: </h3><p>{props.savedPlayerName[0].player_name ? `${props.savedPlayerName[0].player_name}` : \"No input name :(\"}</p>\r\n          <h3>Character Name: </h3><p>{props.finalInput[0].character_name}</p>\r\n          <h3>Level: </h3><p>{props.finalInput[0].chara_level}</p>\r\n          <h3>Class: </h3><p>{props.finalInput[0].dnd_class}</p>\r\n          <h3>Race: </h3><p>{props.finalInput[0].dnd_race}</p>\r\n          <h3>Morality Alignment: </h3><p>{props.finalInput[0].dnd_alignment}</p>\r\n        </div>\r\n        <div className=\"stats\">\r\n          <section className=\"AC\">\r\n            <p>{props.dndStats[0].dex > 4 ? `${10 + (Math.floor((props.dndStats[0].dex - 10) / 2)) }` : null}</p>\r\n            <h3>Armor Class</h3>\r\n          </section>\r\n          <section className=\"initiative\">\r\n          <p>{props.dndStats[0].dex > 4 ? `${10 + (Math.floor((props.dndStats[0].dex - 10) / 2)) }` : null}</p>\r\n            <h3>Initiative</h3>\r\n          </section>\r\n        </div>\r\n        <div className=\"ability-stats\">\r\n          <section>\r\n            <p>{props.dndStats[0].str}{props.dndStats[0].str > 4 ? `(${Math.floor((props.dndStats[0].str - 10) / 2)})` : null}</p>\r\n            <h3>Strength</h3>\r\n          </section>\r\n          <section>\r\n            <p>{props.dndStats[0].dex}{props.dndStats[0].dex > 4 ? `(${Math.floor((props.dndStats[0].dex - 10) / 2)})` : null}</p>\r\n            <h3>Dexterity</h3>\r\n          </section>\r\n          <section>\r\n            <p>{props.dndStats[0].con}{props.dndStats[0].con > 4 ? `(${Math.floor((props.dndStats[0].con - 10) / 2)})` : null}</p>\r\n            <h3>Constitution</h3>\r\n          </section>\r\n          <section>\r\n            <p>{props.dndStats[0].int}{props.dndStats[0].int > 4 ? `(${Math.floor((props.dndStats[0].int - 10) / 2)})` : null}</p>\r\n            <h3>Intellegence</h3>\r\n          </section>\r\n          <section>\r\n            <p>{props.dndStats[0].cha}{props.dndStats[0].cha > 4 ? `(${Math.floor((props.dndStats[0].cha - 10) / 2)})` : null}</p>\r\n            <h3>Charisma</h3>\r\n          </section>\r\n          <section>\r\n            <p>{props.dndStats[0].wis}{props.dndStats[0].wis > 4 ? `(${Math.floor((props.dndStats[0].wis - 10) / 2)})` : null}</p>\r\n            <h3>Wisdom</h3>\r\n          </section>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button onClick={toStart}>Start Over!</button>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default FinalSheet;","import React, {useState} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, useHistory} from \"react-router-dom\";\r\nimport WelcomePage from \"./WelcomePage.js\";\r\nimport GenUse from \"./GenUse.js\";\r\nimport AbilityScores from \"./AbilityScores.js\";\r\nimport DynamicSheet from './DynamicSheet.js';\r\nimport FinalSheet from \"./FinalSheet.js\";\r\n\r\n\r\nfunction Routes(props){\r\n  const history = useHistory();\r\n\r\n  const toFinal = () =>{\r\n    history.push('/final');\r\n  }\r\n\r\n  //processing player name from WelcomePage\r\n  const [savedPlayerName, setSavedPlayerName] = useState([\r\n    {\r\n      player_name: \"\"\r\n    }\r\n  ])\r\n\r\n  const addNewPlayerName = play =>{\r\n    const newPlayerName = {\r\n      player_name: play.player_name\r\n    }\r\n    setSavedPlayerName([newPlayerName]);\r\n  }\r\n\r\n  //processing form info from PCSForm\r\n  const [finalInput, setFinalInput] = useState([\r\n    {\r\n      id: \"\",\r\n      player_name: \"\",\r\n      character_name: \"\",\r\n      dnd_class: \"\",\r\n      dnd_alignment: \"\",\r\n      sex: \"\",\r\n      dnd_race: \"\",\r\n      chara_level: \"\"\r\n    }\r\n  ]);\r\n\r\n\r\n  const addNewChara = char =>{\r\n    const newChara = {\r\n      id: Date.now(),\r\n      dnd_class: char.dnd_class,\r\n      player_level: char.level,\r\n      player_name: char.player_name,\r\n      character_name: char.character_name,\r\n      dnd_alignment: char.dnd_alignment,\r\n      sex: char.sex,\r\n      dnd_race: char.dnd_race,\r\n      chara_level: char.chara_level\r\n    }\r\n    setFinalInput([newChara]);\r\n  }\r\n\r\n  //processing dnd Stats that the player chooses from AbilityScores.js\r\n\r\n  const [dndStats, setDndStats] = useState([\r\n    {\r\n      str: \"\",\r\n      dex: \"\",\r\n      con: \"\",\r\n      int: \"\",\r\n      cha: \"\",\r\n      wis: \"\"\r\n    }\r\n  ]);\r\n\r\n  const addNewDndStats = attr =>{\r\n    const newDndStats ={\r\n      str: attr.str,\r\n      int: attr.int,\r\n      wis: attr.wis,\r\n      dex: attr.dex,\r\n      con: attr.con,\r\n      cha: attr.cha\r\n    }\r\n    setDndStats([newDndStats])\r\n  }\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <WelcomePage addNewPlayerName={addNewPlayerName}/>\r\n        </Route>\r\n        <Route path=\"/use\">\r\n          <GenUse addNewChara={addNewChara} addNewDndStats={addNewDndStats} />\r\n        </Route>\r\n        <Route path=\"/final\">\r\n         <FinalSheet\r\n          finalInput={finalInput}\r\n          dndStats={dndStats}\r\n          savedPlayerName={savedPlayerName}\r\n         />\r\n        </Route>\r\n        <Route path=\"/ability-scores\">\r\n          <AbilityScores \r\n          addNewDndStats={addNewDndStats}\r\n          finalInput={finalInput}\r\n          />\r\n        </Route>\r\n        <Route path=\"/selection\">\r\n          <DynamicSheet addNewChara={addNewChara} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Routes from \"./components/Routes.js\";\r\nimport \"./App.css\";\r\n\r\n//DNDGenerator is just ot check my API responses\r\n\r\nexport default function App (){\r\n\r\n\r\n    return(\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}